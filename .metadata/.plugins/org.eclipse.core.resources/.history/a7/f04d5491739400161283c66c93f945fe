package exercise01;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;
import java.util.Timer;

public class MesswertClient {
	
	private static final String HOST = "localhost";
	private static final int TIMEPORT = 4712;
	private static final int MESSWERTPORT = 4713;
	private static final int BUFSIZE = 508;
	private static final int TIMEOUT = 2000;
	
	public static void main(String[] args) {
		
		
		try(DatagramSocket socket = new DatagramSocket()) {
			
			InetAddress address = InetAddress.getByName(HOST); 
			socket.setSoTimeout(TIMEOUT);
			
			byte[] timeData = new String("").getBytes(); //Empty message invokes system time on time server.
			DatagramPacket timeRequest = new DatagramPacket(timeData, timeData.length, address, TIMEPORT);
			socket.send(timeRequest);
			DatagramPacket timeResponse = new DatagramPacket(new byte[BUFSIZE], BUFSIZE);
			socket.receive(timeResponse);
			String systemTime = "The current system time is: " + new String(timeResponse.getData(), 0, timeResponse.getLength());
			System.out.println(systemTime);
			
			String randomNumber = "" + getRandomNumber();
			System.out.println(randomNumber);
			byte[] randomNumberBytes = randomNumber.getBytes();
			DatagramPacket randomNumberPacket = new DatagramPacket(randomNumberBytes, randomNumberBytes.length, address, MESSWERTPORT);
			
			Timer time = new Timer();
			
			
		} catch (SocketException e) {
			System.err.println("Timeout: " + e.getMessage());
		} catch (UnknownHostException e) {
			System.err.println("Unknown Host: " + e.getMessage());
		} catch (IOException e) {
			System.err.println("IO Exception: " + e.getMessage());
		}
		
	}
	
/**
 * @return The current system time
 * */
	private static Date getCurrentTime() {
		DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
		Date date = new Date();
	}

/**
 * @return A random number as a double 
 * */
private static float getRandomNumber() {
	Random random = new Random();
	return random.nextFloat();
}
}
